<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans        
    					http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        
    					http://dubbo.apache.org/schema/dubbo        
    					http://dubbo.apache.org/schema/dubbo/dubbo.xsd">
 
	<!-- 
	1、指定当前服务/应用的名字（同样的服务名字相同，不要和别的服务同名） 
	name：必填，当前应用名称，用于注册中心计算应用间依赖关系，注意：消费者和提供者应用名不要一样，此参数不是匹配条件，你当前项目叫什么名字就填什么，和提供者消费者角色无关
	owner：选填，应用负责人，用于服务治理，请填写负责人公司邮箱前缀
	-->
	<dubbo:application name="db-Consumer" owner="dubbo-test-consumer"></dubbo:application>
	
	<!-- 2、指定注册中心的位置 -->
	<!-- <dubbo:registry address="zookeeper://127.0.0.1:2181"></dubbo:registry> -->
	<dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183"></dubbo:registry>
	
	<!-- 
	3、声明需要调用的远程服务接口，生成远程服务代理 
	interface：必填，provider中定义的功能服务接口全类名
	id：必填，为provider中定义的功能接口，在当前consumer的IOC容器类定义全局唯一ID
	version：选填，用于标识服务版本，需要与provider的版本一致，consumer端填写“*”表示随机获取一个版本的接口调用
	timeout：选填，默认缺省值为<dubbo:consumer timeout="1000"></dubbo:consumer>，等待provider服务的最长时间
	retries：选填，默认缺省值为<dubbo:consumer retries="2"></dubbo:consumer>
			            配合timeout一起使用，重试次数不包含第一次，不需要重试请设为0
	stub：服务接口客户端本地代理类名，用于在客户端执行本地逻辑，如本地缓存等，该本地代理类的构造函数必须允许传入远程代理对象【本地存根】
	##########################################################################
	【服务启动时检查】在启动时检查依赖的服务是否可用
	Dubbo会在启动时检查依赖服务是否可用，不可用会抛出异常，阻止Spring初始化完成，以便上线时能及早发现问题，默认check="true"。
	可以通过 check="false" 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。
	<dubbo:reference check="true/false"></dubbo:reference>
	-->
	<!-- <dubbo:reference version="1.0.0" id="interService" interface="libra.inter.provider.ProviderInterService" check="false"></dubbo:reference> -->
	<dubbo:reference version="1.0.0" timeout="600" retries="5" id="interService" 
		interface="libra.inter.provider.ProviderInterService" stub="libra.stub.ProviderInterServiceStub_7020" >
		<!-- <dubbo:method name="getAll" timeout="1000"></dubbo:method> -->
	</dubbo:reference>
	<!-- 配置当前消费者的统一规则：所有的服务启动均不检查，也可在<dubbo:reference>标签中每个单独配置 -->
	<dubbo:consumer check="false"></dubbo:consumer>
	
	
	<!-- 
	4、Monitor监控中心配置
	以此种方式配置监控中心，表示从注册中心发现监控中心地址
	<dubbo:monitor protocol="registry"></dubbo:monitor>
	以此种方式配置监控中心，通过制定address直连监控中心服务器地址，端口就是dubbo-monitor-simple下的conf/dubbo.properties的dubbo.protocol.port=7070
	<dubbo:monitor address="127.0.0.1:7070"></dubbo:monitor>
	-->
	<dubbo:monitor protocol="registry"></dubbo:monitor>
	
</beans>
